paths:
  # get all available products
  /api/v1/product/available:
    get:
      summary: Get Only Available products from our API
      tags: [Product Routes]
      description: Returns all available products from our database
      responses:
        200:
          description: Products fetched successfully

  # create a new product
  /api/v1/product/:
    post:
      security: [{ jwt: [] }]
      summary: Create a new product
      tags: [Product Routes]
      requestBody:
        description: please fill all required fields
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateProductInput"
      responses:
        "201":
          description: Post Created Successfully
        "400":
          description: This Product already exists, You can update the stock levels
        "401":
          description: You are not allowed to access this route

  # search for a product
  /api/v1/product/search:
    get:
      tags: [Product Routes]
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name/title of the product
        - in: query
          name: category
          schema:
            type: string
          description: The items matching a certain category
        - in: query
          name: minPrice
          schema:
            type: string
          description: The minimum price in a range
        - in: query
          name: maxPrice
          schema:
            type: string
          description: The maximum price in a range
      responses:
        200:
          description: A list of search results

  /api/v1/product/delete/{id}:
    delete:
      security: [{ jwt: [] }]
      summary: delete a product
      tags: [Product Routes]
      parameters:
        - name: id
          in: path
          required: true
          description: please fill all required fields
          schema:
            type: string
            format: int64
            minimum: 1
      responses:
        201:
          description: Product deleted
        401:
          description: Unauthorized
        400:
          description: product not availble
    # Get product by id
  /api/v1/product/available/{productId}:
    get:
      tags: [Product Routes]
      summary: Returns a product by ID.
      parameters:
        - name: productId
          in: path
          required: true
          description: The Id of the product you want returned
          schema:
            type: string
            # minimum: 15
      responses:
        "200":
          description: OK
        "400":
          description: This Product does not exist.
        "500":
          description: Something went wrong when fetching the product.
        "5XX":
          description: Unexpected error.

  # update a product
  /api/v1/product/update/{productId}:
    patch:
      security: [{ jwt: [] }]
      summary: Update a product
      tags: [Product Routes]
      parameters:
        - name: productId
          in: path
          required: true
          description: The Id of product you want to update
          schema:
            type: string
            minimum: 15
      requestBody:
        description: Please fill fields you want to update and remove un wanted
        content:
          application/json:
            schema:
              product:
                type: object
              properties:
                name:
                  type: string
                  default: Meat
                category:
                  type: string
                  default: Food
                description:
                  type: string
                  default: Quality meat for your whole family
                stock:
                  type: string
                  default: Available
                price:
                  type: number
                  default: 3
                images:
                  type: string
                  default:
      responses:
        '200':
          description: Update done Successfully
        '404':
          description: This Product doesn't exists.
        '401':
          description: You are not allowed to access this route

# schemas
components:
  schemas:
    CreateProductInput:
      type: object
      required:
        - name
        - category
        - description
        - stock
        - price
        - quantity
        - images
      properties:
        name:
          type: string
          default: Meat
        category:
          type: string
          default: Food
        description:
          type: string
          default: Quality meat for your whole family
        stock:
          type: string
          default: Available
        price:
          type: number
          default: 3
        quantity:
          type: number
          default: 1
        images:
          type: string
          default: https://picsum.photos/id/26/4209/2769
        expiredAt:
          type: date
          default: 2023-12-31
    CreatePostResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
        properties:
          name:
            type: string
          category:
            type: string
          description:
            type: string
          stock:
            type: string
          price:
            type: number
          images:
            type: string
    Parameters:
      type: object
      properties:
